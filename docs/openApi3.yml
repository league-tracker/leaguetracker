openapi: 3.0.0
servers:
  - description: Production
    url: https://leaguetracker.appspot.com/
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/LeagueTracker/Test/1.0.0
info:
  description: API to track league results
  version: "1.0.0"
  title: League Tracking API
  contact:
    email: rwalle61@yahoo.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
tags:
  - name: users
    description: Operations available to regular users
  - name: admin
    description: Operations available only to authenticated admins
paths:
  /:
    get:
      summary: Health endpoint
      responses:
        '200':
          description: App healthy
  /players:
    get:
      tags:
        - users
      summary: List all players
      responses:
        '200':
          description: Got player info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
  /players/{id}:
    get:
      tags:
        - users
      summary: Get a single player
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        '200':
          description: Got player info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '400':
          description: Bad input parameter
        '404':
          $ref: '#/components/responses/404'
  /seasons:
    post:
      tags:
        - users
      summary: Create a new season
      requestBody:
        description: season creation options
        content:
          application/json:
            schema:
              type: object
              required:
                - seasonName
                - playersOptions
              properties:
                seasonName:
                  type: string
                playersOptions:
                  type: array
                  items:
                    $ref: '#/components/schemas/PlayerOptions'
      responses:
        '201':
          description: Season created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
        '400':
          description: Bad input parameter
    put:
      tags:
        - users
      summary: Update a season
      requestBody:
        description: season update options
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - season
                - games
              properties:
                season:
                  $ref: '#/components/schemas/Season'
                games:
                  type: array
                  items:
                    $ref: '#/components/schemas/PastGame'
      responses:
        '200':
          description: Season updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: object
                    properties:
                      seasonName:
                        type: string
                      players:
                        type: array
                        items:
                          $ref: '#/components/schemas/Player'
                  deltas:
                    type: array
                    items:
                      type: integer
        '400':
          description: Bad input parameter
  /api-docs:
    get:
      summary: Get this API's docs
      responses:
        '200':
          description: Got this API's docs
  /api-docs/openApi/raw:
    get:
      summary: Get this API's OAS(3) as JSON
      responses:
        '200':
          description: Got this API's OAS(3) as JSON
  /api-docs/openApi/raw/3:
    get:
      summary: Get this API's OAS3 as JSON
      responses:
        '200':
          description: Got this API's OAS3 as JSON
  /api-docs/openApi/raw/2:
    get:
      summary: Get this API's OAS2 as JSON
      responses:
        '200':
          description: Got this API's OAS2 as JSON
    put:
      tags:
        - admin
      summary: Sync this API's OAS2 with its OAS3
      responses:
        '200':
          description: Synced this API's OAS2 with its OAS3
components:
  schemas:
    Season:
      type: object
      properties:
        seasonName:
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
    Player:
      type: object
      required:
        # - id
        - name
        - score
        - wins
        - losses
      properties:
        id:
          $ref: '#/components/schemas/ID'
        name:
          $ref: '#/components/schemas/PlayerName'
        score:
          type: integer
          example: 990
        wins:
          type: integer
          example: 0
        losses:
          type: integer
          example: 1
    PlayerOptions:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/PlayerName'
        score:
          type: integer
          example: 990
        wins:
          type: integer
          example: 0
        losses:
          type: integer
          example: 1
    PlayerName:
      type: string
      example: Craig Forrest
    ID:
      type: string
      # format: uuid
      # example: d290f1ee-6c54-4b01-90e6-d701748f0851
    PastGame:
      type: object
      properties:
        namesOfWinners:
          type: array
          items:
            $ref: '#/components/schemas/PlayerName'
        namesOfLosers:
          type: array
          items:
            $ref: '#/components/schemas/PlayerName'
    Fixture:
      type: object
      properties:
        namesOfTeam1:
          type: array
          items:
            $ref: '#/components/schemas/PlayerName'
        namesOfTeam2:
          type: array
          items:
            $ref: '#/components/schemas/PlayerName'
  responses:
    404:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            type: string